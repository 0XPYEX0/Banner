plugins {
	id 'fabric-loom' version '1.2-SNAPSHOT'
	id 'maven-publish'
	id 'org.ajoberstar.grgit' version '3.1.1'
}

version = ci_version()
group = project.maven_group

repositories {
	maven {
		name = 'spigot'
		url = 'https://hub.spigotmc.org/nexus/content/groups/public/'
	}
	maven {
		name = 'mohist'
		url = 'https://maven.mohistmc.com/'
	}
	maven {
		name = 'izzel'
		url = 'https://maven.izzel.io/releases'
	}
	maven {
		name = 'ParchmentMC'
		url = 'https://maven.parchmentmc.org'
	}
	maven {
		name = 'JitPack'
		url = 'https://jitpack.io'
	}
	maven {
		name = "Sponge"
		url = 'https://repo.spongepowered.org/maven'
	}
}

dependencies {
	implementation 'org.projectlombok:lombok:1.18.26'
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.19.3:2023.03.12@zip")
	}
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	// bukkit
	modImplementation "org.yaml:snakeyaml:1.33"
	modImplementation "org.apache.maven:maven-resolver-provider:3.8.5"
	modImplementation "org.apache.maven.resolver:maven-resolver-connector-basic:1.7.3"
	modImplementation "org.apache.maven.resolver:maven-resolver-transport-http:1.7.3"
	compileOnly "org.jetbrains:annotations:21.0.1"
	modImplementation "com.mohistmc:i18n:0.2"

	// craftbukkit
	modImplementation "org.fusesource.jansi:jansi:1.18"
	modImplementation "jline:jline:2.14.6"
	modImplementation "com.googlecode.json-simple:json-simple:1.1.1"
	modImplementation "org.xerial:sqlite-jdbc:3.41.0.0"
	modImplementation "com.mysql:mysql-connector-j:8.0.32"

	modImplementation "net.md-5:SpecialSource:1.11.0"

	// spigot
	modImplementation "net.md-5:bungeecord-chat:1.16-R0.4"
	modImplementation "io.izzel:tools:1.3.0"
	modImplementation "com.mohistmc:dynamicenum:0.1"

	modImplementation "com.google.guava:failureaccess:1.0.1"
	modImplementation "com.google.guava:guava:31.0.1-jre"
	modImplementation "com.google.code.gson:gson:2.10"
	modImplementation "com.mojang:authlib:3.17.30"
	modImplementation "com.mojang:logging:1.1.1"
	compileOnly "commons-lang:commons-lang:2.6"
	modImplementation "org.slf4j:slf4j-api:2.0.6"

	modImplementation "org.apache.logging.log4j:log4j-core:2.20.0"
	modImplementation "org.apache.logging.log4j:log4j-iostreams:2.20.0"
	modImplementation "org.apache.logging.log4j:log4j-api:2.20.0"
	modImplementation "org.apache.logging.log4j:log4j-slf4j2-impl:2.20.0"
	modImplementation "org.apache.commons:commons-lang3:3.12.0"
	modImplementation "net.sf.jopt-simple:jopt-simple:5.0.4"
	modImplementation "net.java.dev.jna:jna-platform:5.13.0"
	modImplementation "net.java.dev.jna:jna:5.13.0"
	modImplementation "it.unimi.dsi:fastutil:8.5.12"
	modImplementation "commons-io:commons-io:2.11.0"
	modImplementation "com.mojang:javabridge:2.0.25"
	modImplementation "com.mojang:datafixerupper:6.0.6"
	modImplementation "com.mojang:brigadier:1.0.18"
	modImplementation "com.github.oshi:oshi-core:6.4.0"

	modImplementation "io.netty:netty-buffer:4.1.82.Final"
	modImplementation "io.netty:netty-codec:4.1.82.Final"
	modImplementation "io.netty:netty-common:4.1.82.Final"
	modImplementation "io.netty:netty-handler:4.1.82.Final"
	modImplementation "io.netty:netty-resolver:4.1.82.Final"
	modImplementation "io.netty:netty-transport:4.1.82.Final"
	modImplementation "io.netty:netty-transport-classes-epoll:4.1.82.Final"
	modImplementation "io.netty:netty-transport-native-unix-common:4.1.82.Final"

	// jansi support
	modImplementation "org.jline:jline-terminal:3.12.1"
	modImplementation "org.jline:jline-terminal-jansi:3.12.1"
	modImplementation "net.minecrell:terminalconsoleappender:1.3.0"

	include "org.jline:jline-terminal:3.12.1"
	include "org.jline:jline-terminal-jansi:3.12.1"
	include "net.minecrell:terminalconsoleappender:1.3.0"

	//class modify
	modImplementation "com.github.LlamaLad7:MixinExtras:0.1.1"
	annotationProcessor "com.github.LlamaLad7:MixinExtras:0.1.1"
	modImplementation 'com.github.1798643961:mixin-tools:1.0.1'
	annotationProcessor 'com.github.1798643961:mixin-tools:1.0.1'

	include "com.github.1798643961:mixin-tools:1.0.1"
	include "com.github.LlamaLad7:MixinExtras:0.1.1"

}

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/banner.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
	options.compilerArgs << '-Xlint:-dep-ann' << '-Xlint:-removal'
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE")
	manifest {
		attributes(
				'Specification-Title'   : 'Mohist Banner',
				'Specification-Vendor'  : 'MohistMC',
				'Specification-Version' : ci_version(),
				'Implementation-Title'  : 'Mohist Banner',
				'Implementation-Version': '1.19.4-' + ci_version(),
				'Implementation-Vendor' : 'MohistMC'
		)
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

import groovy.json.JsonSlurper
static String ci_version() {
	try {
		def conn = new URL("https://ci.codemc.io/job/MohistMC/job/Banner/api/json").openConnection()
		conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/112.0.0.0 Safari/537.36")
		conn.connect()
		def root = conn.content.text
		def jsonSluper = new JsonSlurper()

		String data = jsonSluper.parseText(root)
		def number = data.substring(data.indexOf("number")).split(",")
		return Integer.valueOf(number[0].replace("number=", "")).intValue()
	} catch (Exception ignored) {
		return '1.19.4'
	}
}
